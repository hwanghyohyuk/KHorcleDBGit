-- DAY10 수업내용

-- 테이블 수정 : ALTER TABLE 테이블 수정할 내용;
-- 컬럼 추가, 컬럼 삭제, 컬럼 자료형 변경, 컬럼 DEFAULT 변경, 컬럼명 바꾸기
-- 제약조건 추가, 제약조건 삭제, 제약조건 이름 바꾸기
-- 테이블명 바꾸기

-- 컬럼 추가하기
-- 테이블 생성시 컬럼 작성방법과 동일하게 하면 됨
SELECT * FROM DEPTCPY;

INSERT INTO DEPTCPY
(SELECT * FROM DEPARTMENT);

ALTER TABLE DEPTCPY
ADD (LOC_NAME VARCHAR2(40));

SELECT * FROM DEPTCPY;

ALTER TABLE DEPTCPY
ADD (COUNTRY_NAME VARCHAR2(30) DEFAULT '한국');

SELECT * FROM DEPTCPY;

-- 제약조건 추가
CREATE TABLE EMP2
AS
SELECT * FROM EMPLOYEE;

SELECT * FROM EMP2;

-- 1.
ALTER TABLE EMP2
ADD PRIMARY KEY (EMP_ID);

-- 2.
ALTER TABLE EMP2
ADD CONSTRAINT UN_EMP2NO UNIQUE (EMP_NO);

-- DEPT_ID 에 외래키 제약조건 추가 : FK_EMP2DEPTID
-- JOB_ID 에 외래키 제약조건 추가 : FK_EMP2JOBID
ALTER TABLE EMP2
ADD CONSTRAINT FK_EMP2DEPTID FOREIGN KEY (DEPT_ID) 
        REFERENCES DEPARTMENT ON DELETE SET NULL
ADD CONSTRAINT FK_EMP2JOBID FOREIGN KEY (JOB_ID)
        REFERENCES JOB ON DELETE SET NULL;

-- NOT NULL 제약조건은 ADD 로 추가할 수 없음
-- 컬럼 레벨에서만 설정할 수 있는 제약조건이기 때문임
-- MODIFY 로 컬럼 내용 변경으로 적용해야 함
ALTER TABLE EMP2
ADD NOT NULL (HIRE_DATE);  -- ERROR

ALTER TABLE EMP2
MODIFY (HIRE_DATE NOT NULL);

-- 컬럼 자료형 변경
-- 컬럼에 값이 기록되어 있지 않은 경우에는 어떤 자료형이든 변경 가능함
CREATE TABLE EMP4
AS 
SELECT EMP_ID, EMP_NAME, HIRE_DATE
FROM EMPLOYEE;

ALTER TABLE EMP4
MODIFY (EMP_ID VARCHAR2(5),
         EMP_NAME CHAR(20));
-- CHAR <-> VARCHAR2 변경 가능
-- 단, 해당 컬럼에 값이 기록이 되어 있는 경우에는
-- 크기는 같거나 더 크게 변경할 수 있음. 크기를 줄일 수는 없음

ALTER TABLE EMP4
MODIFY (HIRE_DATE CHAR(8)); -- DATE -> CHAR 로 변경 못 함

ALTER TABLE EMP4
MODIFY (EMP_NAME CHAR(15)); -- 값이 존재하므로 크기를 줄일 수 없음

-- DEFAULT 값 변경
CREATE TABLE EMP5 (
  EMP_ID CHAR(3),
  EMP_NAME VARCHAR2(20),
  ADDR1 VARCHAR2(20) DEFAULT '서울',
  ADDR2 VARCHAR2(100)
);

INSERT INTO EMP5
VALUES ('A10','임태희', DEFAULT, '청담동');
INSERT INTO EMP5
VALUES ('B10', '이병언', DEFAULT, '분당 정자동');

SELECT * FROM EMP5;

ALTER TABLE EMP5
MODIFY (ADDR1 DEFAULT '경기');

-- 변경된 DEFAULT 값은 변경된 이후에만 적용됨.
INSERT INTO EMP5
VALUES ('C10', '임승우', DEFAULT, '분당 효자촌');

SELECT * FROM EMP5;


-- 컬럼 삭제 
-- DROP COLUMN 컬럼명
-- DROP (컬럼명, ....)

ALTER TABLE EMP4
DROP COLUMN EMP_ID;

SELECT * FROM EMP4;
ROLLBACK;  -- 삭제된 컬럼은 복구할 수 없음

ALTER TABLE EMP4
DROP (EMP_NAME);

SELECT * FROM EMP4;

SELECT * FROM DEPTCPY;

ALTER TABLE DEPTCPY
DROP (DEPT_ID, DEPT_NAME, LOC_ID, LOC_NAME, COUNTRY_NAME);
-- 테이블에는 최소 1개의 컬럼이 존재해야 함
-- 컬럼 모두 삭제할 수 없음

CREATE TABLE TB1 ();  -- 최소 1개의 컬럼은 존재해야 함

-- 제약조건이 설정된 컬럼은 삭제할 수 없다.
CREATE TABLE TB1 (
  PK NUMBER PRIMARY KEY,
  FK NUMBER REFERENCES TB1,
  COL1 NUMBER,
  CHECK ( PK > 0 AND COL1 > 0 )
);

ALTER TABLE TB1
DROP (PK);  -- ERROR

ALTER TABLE TB1
DROP (COL1); --ERROR

-- 제약조건도 함께 삭제(CASCADE) 하면 가능함
ALTER TABLE TB1
DROP (PK) CASCADE CONSTRAINTS;

ALTER TABLE TB1
DROP (COL1) CASCADE CONSTRAINTS;

-- 제약조건 설정 테이블 만들기
CREATE TABLE CONSTRAINT_EMP (
  ENAME VARCHAR2(20) CONSTRAINT NENAME NOT NULL,
  ENO   VARCHAR2(14)  CONSTRAINT NENO NOT NULL,
  MARRIAGE CHAR(1) DEFAULT 'N',
  EID CHAR(3),
  EMAIL VARCHAR2(30),
  JID CHAR(2),
  MID CHAR(3),
  DID CHAR(2),
  CONSTRAINT CHK CHECK (MARRIAGE IN ('N', 'Y')),
  CONSTRAINT PKEID PRIMARY KEY (EID),
  CONSTRAINT UENO UNIQUE (ENO),
  CONSTRAINT UEMAIL UNIQUE (EMAIL),
  CONSTRAINT FKJID FOREIGN KEY (JID) REFERENCES JOB (JOB_ID) ON DELETE SET NULL,
  CONSTRAINT FKMID FOREIGN KEY (MID) REFERENCES CONSTRAINT_EMP ON DELETE SET NULL,
  CONSTRAINT FKDID FOREIGN KEY (DID) REFERENCES DEPARTMENT ON DELETE CASCADE
);

-- 제약조건 삭제
-- 제약조건 1개 삭제
ALTER TABLE CONSTRAINT_EMP
DROP CONSTRAINT CHK;

-- 제약조건 여러 개 삭제
ALTER TABLE CONSTRAINT_EMP
DROP CONSTRAINT FKJID
DROP CONSTRAINT FKMID
DROP CONSTRAINT FKDID;

-- PRIMARY KEY 제약조건 삭제의 경우
ALTER TABLE CONSTRAINT_EMP
DROP CONSTRAINT PK_EMPID;
--또는
ALTER TABLE CONSTRAINT_EMP
DROP PRIMARY KEY;

-- UNIQUE 제약조건 삭제의 경우
ALTER TABLE CONSTRAINT_EMP
DROP CONSTRAINT UENO
DROP CONSTRAINT UEMAIL;
--또는
ALTER TABLE CONSTRAINT_EMP
DROP UNIQUE (ENO)
DROP UNIQUE (EMAIL);


-- NOT NULL 제약조건 삭제의 경우
-- 제약조건 이름이 부여된 경우
ALTER TABLE CONSTRAINT_EMP
DROP CONSTRAINT NENAME
DROP CONSTRAINT NENO;
-- 또는 제약조건 이름이 없는 경우
ALTER TABLE CONSTRAINT_EMP
MODIFY (ENAME NULL, ENO NULL);

-- 데이터 딕셔너리를 통해 삭제 확인해 봄
SELECT TABLE_NAME, CONSTRAINT_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'CONSTRAINT_EMP';


-- NOT NULL 제약조건 삭제시, 제약조건 이름이 없는 경우
ALTER TABLE CONSTRAINT_EMP
MODIFY (ENAME NULL, ENO NULL);

-- 테이블의 컬럼을 관리하는 데이터 딕셔너리 : USER_TAB_COLS
SELECT * FROM USER_TAB_COLS;
DESC USER_TAB_COLS;

-- 컬럼별 제약조건을 관리하는 데이터 딕셔너리 : USER_CONS_COLUMNS
-- 테스트용 테이블 만들기
CREATE TABLE TB_EXAM (
  COL1  CHAR(3)  PRIMARY KEY,
  ENAME  VARCHAR2(20),
  FOREIGN KEY (COL1) REFERENCES EMPLOYEE
);

SELECT CONSTRAINT_NAME AS 이름,
        CONSTRAINT_TYPE AS 유형,
        COLUMN_NAME AS 컬럼명,
        R_CONSTRAINT_NAME AS 참조,
        DELETE_RULE  AS 삭제규칙
FROM USER_CONSTRAINTS
JOIN USER_CONS_COLUMNS USING (CONSTRAINT_NAME, TABLE_NAME)
WHERE TABLE_NAME = 'TB_EXAM';

-- 이름 바꾸기 : 컬럼명, 제약조건 이름, 테이블명
-- 컬럼명 바꾸기
ALTER TABLE TB_EXAM
RENAME COLUMN COL1 TO EMPID;

-- 제약조건 이름 바꾸기
ALTER TABLE TB_EXAM
RENAME CONSTRAINTS SYS_C007208 TO PK_EID;

ALTER TABLE TB_EXAM
RENAME CONSTRAINTS SYS_C007209 TO FK_EID;

-- 테이블명 바꾸기
ALTER TABLE TB_EXAM RENAME TO TB_SAMPLE1;
-- 또는
RENAME TB_SAMPLE1 TO TB_SAMPLE;

SELECT * FROM TB_SAMPLE;


-- 테이블 삭제하기 : DROP TABLE 테이블명;
CREATE TABLE DEPT (
  DID CHAR(2) PRIMARY KEY,
  DNAME VARCHAR2(10)
);

CREATE TABLE EMP6 (
  EID CHAR(3) PRIMARY KEY,
  ENAME VARCHAR2(10),
  DID CHAR(2) REFERENCES DEPT
);

-- 참조되는 테이블을 삭제못 함
DROP TABLE DEPT; -- ERROR
DROP TABLE DEPT CASCADE CONSTRAINTS;  
-- DEPT 에 대한 REFERENCES 제약조건을 함께 삭제하라는 의미임

DESC EMP6;
















