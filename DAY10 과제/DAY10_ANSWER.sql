--1. 
CREATE TABLE TB_CATEGORY(
NAME VARCHAR(10),
USE_YN CHAR(1) DEFAULT 'Y'
);

--2.
CREATE TABLE TB_CLASS_TYPE(
NO VARCHAR2(5),
NAME VARCHAR2(10),
CONSTRAINT PNO PRIMARY KEY(NO)
);

--3.
ALTER TABLE TB_CATEGORY
ADD CONSTRAINT PNAME PRIMARY KEY(NAME);

--4.
ALTER TABLE TB_CLASS_TYPE
MODIFY NAME NOT NULL;

--5.
ALTER TABLE TB_CLASS_TYPE
MODIFY NO VARCHAR(10);
ALTER TABLE TB_CLASS_TYPE
MODIFY NAME VARCHAR(20);
ALTER TABLE TB_CATEGORY
MODIFY NAME VARCHAR2(20);

--6.
ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CATEGORY
RENAME COLUMN NAME TO CATEGORY_NAME;

--7.
ALTER TABLE TB_CLASS_TYPE
RENAME CONSTRAINT PNO TO PK_CLASS_TYPE_NO;
ALTER TABLE TB_CATEGORY
RENAME CONSTRAINT PNAME TO PK_CATEGORY_NAME;

--8.
INSERT INTO TB_CATEGORY VALUES ('공학','Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES ('의학','Y');
INSERT INTO TB_CATEGORY VALUES ('예체능','Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회','Y');
COMMIT; 

--9.
ALTER TABLE TB_DEPARTMENT
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);

--10.
CREATE VIEW VW_학생일반정보(학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT;

--11.
CREATE VIEW VW_지도면담(학생이름, 학과이름, 지도교수이름)
AS SELECT STUDENT_NAME, DEPARTMENT_NAME, PROFESSOR_NAME
FROM TB_STUDENT
INNER JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
LEFT OUTER JOIN TB_PROFESSOR ON(TB_STUDENT.COACH_PROFESSOR_NO=TB_PROFESSOR.PROFESSOR_NO)
ORDER BY 2,1;

--12.
CREATE VIEW VW_학과별학생수(DEPARTMENT_NAME, STUDENT_COUNT)
AS SELECT DEPARTMENT_NAME, COUNT(*)
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME
ORDER BY 1;

--13.
UPDATE "VW_학생일반정보"
SET "학생이름" = '황효혁'
WHERE 학번 = 'A213046';

SELECT * FROM "VW_학생일반정보"
WHERE 학번 = 'A213046';

--14.
CREATE VIEW VW_학생일반정보(학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WITH READ ONLY;--추가

--15.
/*
과목 수강 횟수 = 누적 수강생 수
최근 3년 X, 최근 5년 O
TB_GRADE 테이블에 기록된 데이터들을 기반으로 
TB_CLASS에 조인시켜서 과목별 수강생 수를 파악
*/
SELECT *
FROM(
SELECT CLASS_NO 과목번호, CLASS_NAME 과목이름, COUNT(*) AS "누적수강생수(명)"
FROM TB_CLASS
INNER JOIN TB_GRADE USING(CLASS_NO)
WHERE TO_NUMBER(SUBSTR(TERM_NO,1,4))>=(SELECT MAX(SUBSTR(TERM_NO,1,4)) FROM TB_GRADE)-4 /* 최근 5년 */
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 3 DESC
)WHERE ROWNUM <=3; /* TOP n 분석 */

COMMIT;
--DML
--1.
INSERT INTO TB_CLASS_TYPE VALUES('01', '전공필수');
INSERT INTO TB_CLASS_TYPE VALUES('02', '전공선택');
INSERT INTO TB_CLASS_TYPE VALUES('03', '교양필수');
INSERT INTO TB_CLASS_TYPE VALUES('04', '교양선택');
INSERT INTO TB_CLASS_TYPE VALUES('05', '논문지도');
COMMIT;

--2.
CREATE TABLE TB_학생일반정보
AS
SELECT  STUDENT_NO 학번, STUDENT_NAME 학생이름, STUDENT_ADDRESS 주소
FROM TB_STUDENT;

--3.
CREATE TABLE TB_국어국문학과
AS
SELECT STUDENT_NO 학번, STUDENT_NAME 학생이름, 
CASE
WHEN TO_NUMBER(SUBSTR(STUDENT_SSN,1,2))>50 THEN '19' || SUBSTR(STUDENT_SSN,1,2)
ELSE '20'||SUBSTR(STUDENT_SSN,1,2)
END AS 출생년도,
PROFESSOR_NAME 교수이름
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR ON(TB_STUDENT.COACH_PROFESSOR_NO = TB_PROFESSOR.PROFESSOR_NO)
WHERE DEPARTMENT_NAME LIKE '국어국문%';

UPDATE TB_국어국문학과
SET 교수이름 = '지도교수 미지정'
WHERE 교수이름 IS NULL;

COMMIT;

SELECT *
FROM TB_국어국문학과;
--4.
UPDATE TB_DEPARTMENT 1
SET CAPACITY = ROUND((SELECT CAPACITY FROM TB_DEPARTMENT B WHERE A.DEPARTMENT_NO = B.DEPARTMENT_NO)*1.2,0);

ROLLBACK;

--5.
UPDATE TB_STUDENT
SET STUDENT_ADDRESS = '서울시 종로구 숭인동 181-21'
WHERE STUDENT_NO = 'A413042';

SELECT *
FROM TB_STUDENT
WHERE STUDENT_NO = 'A413042';

--6.
UPDATE TB_STUDENT A
SET STUDENT_SSN = SUBSTR((SELECT STUDENT_SSN FROM TB_STUDENT B WHERE A.STUDENT_NO = B.STUDENT_NO),1,6);

ROLLBACK;

SELECT * FROM TB_STUDENT;

--7.
UPDATE TB_GRADE
SET POINT = 3.5
WHERE  TERM_NO = '200501' 
   AND  CLASS_NO = 
   (SELECT CLASS_NO FROM TB_CLASS WHERE CLASS_NAME = '피부생리학')
   AND  STUDENT_NO = 
   (SELECT STUDENT_NO FROM TB_STUDENT WHERE DEPARTMENT_NO = 
   (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '의학과')
   AND STUDENT_NAME = '김명훈');
   
SELECT POINT FROM TB_GRADE 
WHERE TERM_NO = '200501' 
   AND  CLASS_NO = (SELECT CLASS_NO FROM TB_CLASS WHERE CLASS_NAME = '피부생리학')
   AND  STUDENT_NO = (SELECT STUDENT_NO FROM TB_STUDENT WHERE DEPARTMENT_NO = 
   (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '의학과')
   AND STUDENT_NAME = '김명훈');
   
--   8.
DELETE 
FROM TB_GRADE G
WHERE STUDENT_NO = (SELECT STUDENT_NO FROM TB_STUDENT S WHERE G.STUDENT_NO = S.STUDENT_NO AND ABSENCE_YN = 'Y');

ROLLBACK;

SELECT STUDENT_NO, POINT
FROM TB_GRADE G
WHERE STUDENT_NO = (SELECT STUDENT_NO FROM TB_STUDENT S WHERE G.STUDENT_NO = S.STUDENT_NO AND ABSENCE_YN ='Y');

COMMIT;

