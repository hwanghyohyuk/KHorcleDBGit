--DAY 5 수업 내용

-- HAVING 절 :  GROUP BY 절 아래에 사용함
-- 반드시  GROUP BY 와 함께 사용하여야 함
-- 그룹 묶어서 계산한 그룹함수 결과값에 대한 조건처리임
-- SELECT 절에서는 HAVING 처리된 값만 조회됨.
--WHERE 절에서는 그룹함수 사용 불가 단일행함수만 사용가능
-- 부서별 급여 합계 중 9백만을 초과하는 부서와 급여합계 조회
SELECT DEPT_ID, SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_ID
HAVING SUM(SALARY) > 9000000;

--추가 함수

--분석 함수
--RANK() 함수 : 등수 또는 순위 처리하는 함수
--2가지 표현식이있다
--해당 값에 대한 순위를 알고자 할 때(전체 값에서 해당값의 순위를 알고자할때)
--RANK(순위를 알고자 하는 값) WITHIN GROUP (ORDER BY 컬럼명 정렬방식)
--급여 230만원이 전체급여중 몇 순위에 해당하는지 조회
SELECT RANK(2300000) WITHIN GROUP (ORDER BY SALARY DESC) AS 순위
FROM EMPLOYEE;

--전체 값의 순위를 매기고자 할 때
--RANK() OVER (ORDER BY 컬럼명 정렬방식)
SELECT EMP_NAME, SALARY, RANK() OVER (ORDER BY SALARY DESC) AS 순위
FROM EMPLOYEE;

--ROLLUP 함수 : GROUP BY 절에서만 사용함
--집계 결과값이 가장 아래쪽에 표시됨
SELECT DEPT_ID, SUM(SALARY)
FROM EMPLOYEE
WHERE DEPT_ID IS NOT NULL 
GROUP BY DEPT_ID;

SELECT DEPT_ID, SUM(SALARY)
FROM EMPLOYEE
WHERE DEPT_ID IS NOT NULL 
GROUP BY ROLLUP(DEPT_ID);

SELECT DEPT_ID, SUM(SALARY), MAX(SALARY), MIN(SALARY), AVG(SALARY)
FROM EMPLOYEE
WHERE DEPT_ID IS NOT NULL 
GROUP BY ROLLUP(DEPT_ID);


--CUBE 함수 : GROUP BY 절에서만 사용함
--총 집계 결과를 구함, 집계값이 위에 표시됨

SELECT DEPT_ID, SUM(SALARY), MAX(SALARY), MIN(SALARY), AVG(SALARY)
FROM EMPLOYEE
WHERE DEPT_ID IS NOT NULL 
GROUP BY CUBE(DEPT_ID);

SELECT DEPT_ID,MAX(SALARY), MIN(SALARY), AVG(SALARY)
FROM EMPLOYEE
WHERE DEPT_ID IS NOT NULL AND JOB_ID IS NOT NULL
GROUP BY ROLLUP(DEPT_ID,JOB_ID);

SELECT DEPT_ID,JOB_ID,MAX(SALARY), MIN(SALARY), AVG(SALARY)
FROM EMPLOYEE
WHERE DEPT_ID IS NOT NULL AND JOB_ID IS NOT NULL
GROUP BY ROLLUP(DEPT_ID,JOB_ID);
--GROUP BY ROLLUP(JOB_ID,DEPT_ID);

